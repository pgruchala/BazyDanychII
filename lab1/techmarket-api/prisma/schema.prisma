// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  categoryId  Int
  description String?    @db.Text
  price       Decimal    @db.Decimal(10, 2)
  stockCount  Int        @default(1)
  brand       String
  imageUrl    String?
  isAvailable Boolean    @default(true)
  createdAt   DateTime   @default(now()) @db.Timestamptz
  category    Category   @relation("ProductCategories", fields: [categoryId], references: [id])
  cartitem    CartItem[] @relation("ProductCart")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  products    Product[] @relation("ProductCategories")
}

model User {
  id           Int    @id @default(autoincrement())
  username     String @unique
  email        String @unique
  passwordHash String
  firstName    String
  lastName     String
  cart         Cart?  @relation("UserCart")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  productId Int
  quantity  Int      @default(1)
  addedAt   DateTime @default(now()) @db.Timestamptz
  cartId    Int
  product   Product  @relation("ProductCart", fields: [productId], references: [id])
  Cart      Cart     @relation(fields: [cartId], references: [id])
}

model Cart {
  id     Int        @id @default(autoincrement())
  userId Int        @unique
  items  CartItem[] @relation()
  user   User       @relation("UserCart", fields: [userId], references: [id])
}
